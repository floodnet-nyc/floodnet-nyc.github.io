{"0": {
    "doc": "About FloodNet",
    "title": "About",
    "content": "FloodNet is a cooperative of communities, researchers, and New York City government agencies working to better understand the frequency, severity, and impacts of flooding in New York City. The data and knowledge gained can be used by local residents, researchers, city agencies, and others to advocate around and work to reduce flood risk. FloodNet brings together innovative sources of information on street flooding impacts in neighborhoods that are vulnerable to high tides, storm surge, and stormwater runoff. ",
    "url": "/about/",
    "relUrl": "/about/"
  },"1": {
    "doc": "About FloodNet",
    "title": "Motivation",
    "content": "Of the myriad impacts that are predicted to accompany climate change, flooding is expected to have an out-sized influence on public health, infrastructure, and mobility in urban areas. In New York City, for example, sea level rise and an increase in the occurrence of high intensity rain storms (which convey large volumes of water to drains, leading to backups and overflows) have led to a dramatic increase in flood risk, particularly in low-lying and coastal neighborhoods. The physical presence of standing water on streets and sidewalks can impede mobility and restrict access to transportation. Additionally, urban flood water contains a diverse array of contaminants, including industrial and household chemicals, fuels, and sewage. Access to real-time information on flooding can improve resiliency and efficiency by allowing residents to identify navigable transportation routes and make informed decisions to avoid exposure to floodwater contaminants. ",
    "url": "/about/",
    "relUrl": "/about/"
  },"2": {
    "doc": "About FloodNet",
    "title": "Objective",
    "content": "The objective of the FloodNet project is to develop and deploy a platform to provide real-time, street-level flood information - including the presence, frequency, and severity of local surface flood events - to a range of stakeholders, including policy makers, government agencies, citizens, emergency response teams, community advocacy groups, and researchers. This platform includes a physical sensor network, its connectivity, as well as data storage, and sharing infrastructure. ",
    "url": "/about/",
    "relUrl": "/about/"
  },"3": {
    "doc": "About FloodNet",
    "title": "About FloodNet",
    "content": " ",
    "url": "/about/",
    "relUrl": "/about/"
  },"4": {
    "doc": "Home",
    "title": " Contributing ",
    "content": "Did you have a question? Did you find a bug? Or did you simply wanted to say hello?! You can reach out to the author of the repo via email about any questions. When contributing to this documentation raise an issue to start a discussion in the GiHub repo. See you there! ",
    "url": "/",
    "relUrl": "/"
  },"5": {
    "doc": "Home",
    "title": "License",
    "content": "This documentation is distributed using MIT License. ",
    "url": "/",
    "relUrl": "/"
  },"6": {
    "doc": "Home",
    "title": "Home",
    "content": "# FloodNet Documentation This documentation website is built for FloodNet, a cooperative of communities, researchers, and New York City government agencies. This is an evolving website which contains all the documents related to Quality Assurance Plans, Sensor Assembly process, Quality Control and additional references. ",
    "url": "/",
    "relUrl": "/"
  },"7": {
    "doc": "Quality Management",
    "title": "Roles and Responsibilities",
    "content": "The following table outlines the roles and responsibilities for FloodNet personnel | FloodNet personnel | Roles | QA Responsibilities | --------------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ | Technical Lead | 1. QA/QC Manager/Advisor 2. Technical Lead | 1. Manages the project and oversees the big picture2. Uses strong technical skills to help the team solve technical issues | Sensor Engineer | 1. QA/QC Team Test Lead 2. QA/QC Validation Engineer | 1. Provides Leadership specifically to the test team to support the test teammates and oversee test processes 2. Participate in validation of the Quality Assurance Process (QAP)/Quality Control (QC) 3. Develop and maintain Manual/Automated test processes | Graduate Research Assistant | 1. QA/QC Manual/Automation Test Analyst 2. QA/QC Tester | 1. Develop, maintain and execute Manual/Automated test processes 2. Follow strict set of instructions to test or validate the product | ",
    "url": "/docs/quality-management/",
    "relUrl": "/docs/quality-management/"
  },"8": {
    "doc": "Quality Management",
    "title": "Quality Management",
    "content": "# Quality Management This folder contains the Quality Management at FloodNet including - Quality Assurance Procedure (QAP), Quality Control (QC), and Troubleshooting to implement, execute, and validate the sensor quality. {: .fs-6 .fw-300 } ",
    "url": "/docs/quality-management/",
    "relUrl": "/docs/quality-management/"
  },"9": {
    "doc": "Real-time Flood Depth Data Quality Control",
    "title": "Real-time Flood Depth Data Quality Control",
    "content": "# Real-time Flood Depth Data Quality Control **Table of Contents:** * [1.0 General](#10-general) + [1.1 Background](#11-background) + [1.2 Purpose](#12-purpose) * [2.0 Constraints](#20-constraints) + [2.1 Ground truth Validation of Real-time Flood Depth Data](#21-ground-truth-validation-of-real-time-flood-depth-data) + [2.2 Accepted Calibration Standards](#22-accepted-calibration-standards) + [2.3 Sensor Deployment Considerations](#23-sensor-deployment-considerations) + [2.4 Hardware Limitations](#24-hardware-limitations) * [3.0 Flood Depth Data Flow Pipeline](#30-flood-depth-data-flow-pipeline) * [4.0 Quality Control](#40-quality-control) + [4.1 QC Flags for Real-time Flood Depth Data](#41-qc-flags-for-real-time-flood-depth-data) + [4.2 Flood Sensors QC Test Hierarchy](#42-flood-sensors-qc-test-hierarchy) + [4.3 Flood Sensors QC Test Descriptions](#43-flood-sensors-qc-test-descriptions) - [4.3.1 Pre-Production phase testing](#431-pre-production-phase-testing) * [Test 1 - Calibration Test](#test-1---calibration-test) * [Test 2 - Accuracy Percentage Check](#test-2---accuracy-percentage-check) - [4.3.2 Post-Production testing](#432-post-production-testing) * [Message Syntax Check](#message-syntax-check) * [Gross Range Test](#gross-range-test) * [Noise Test](#noise-test) * [Spike Test](#spike-test) * [Rate of Change Test](#rate-of-change-test) * [Flat Line Test](#flat-line-test) * [Neighbor Sensor Test](#neighbor-sensor-test) + [4.4 Examples of QC Tests Applications](#44-examples-of-qc-tests-applications) * [References](#references) ## 1.0 General ### 1.1 Background [FloodNet](floodnet.nyc) is a cooperative of communities, researchers, New York City governament agencies working to better understand the frequency, severity, and impacts of flooding in New York City. This project uses advanced IoT flood sensors to measure Real-time Flood Depth Data (FDD) on a city-wide scale. These sensors use [Industrial grade Ultrasonic Ranging sensors](https://www.maxbotix.com/ultrasonic_sensors/mb7389.htm) to calculate the depth data. ### 1.2 Purpose The purpose of this document is to to set forth the Quality Control (QC) for Real-time Flood Depth Data (FDD) at FloodNet. This manual presents series of QC procedures for FDD with real-time data as the focus. These QC procedures are written specifically to the Real-time FDD collected from the sensors based on Ultrasonic Rangefinding Technology. FDD observations are collected in the streets and canals in an urban setting in real-time. The QC tests in this document are created with the help of following references: 1. [U.S. Integrated Ocean Observing System, 2021 Manual for Real-Time Quality Control of Water Level Data Version 2.1](https://doi.org/10.25923/vpsx-dc82) 2. ## 2.0 Constraints ### 2.1 Ground truth Validation of Real-time Flood Depth Data {explaining manual ground truth experiment} ### 2.2 Accepted Calibration Standards To ensure that the FDD sensors produce accurate flood depth data, rigorous calibrations and calibration checks are performed in real-time in addition to the QC/QAP before the production phase. The test procedures are designed to ensure valid calibration of the FDD. Fundamental NIST standards for length will suffice when conducting calibration checks in Laboratory settings. ### 2.3 Sensor Deployment Considerations {Light pole angles, street sign post angles, location, surface, weeds, obstacles} ### 2.4 Hardware Limitations {Accuracy, error, drift and influence due to external agents} ## 3.0 Flood Depth Data Flow Pipeline {full pipeline data flow diagram with explanation} ## 4.0 Quality Control The Quality Control techniques described in this manual will help assure that the Flood Depth Data (FDD) disseminated to communities, researchers and agencies are based on accurate observations. ### 4.1 QC Flags for Real-time Flood Depth Data | Flag | Description |-------------------|------------------------------------------------------------------------------------------------------| Pass = 1 | Data passed real-time QC tests and are deemed adequate for use as preliminary Flood Depth Data (FDD) | Not Evaluated = 2 | Data has not been QC tested | Questionable = 3 | Data is questionable and is flagged to draw further attention | Fail=4 | Erroneous data; Failed one or more QC tests and is not acceptable of QC quality | Missing Data=9 | Data is missing | ### 4.2 Flood Sensors QC Test Hierarchy | Category | QC Test | Stage | . | Pre-Production Testing (Laboratory) | Calibration Test | 1 | . | Accuracy Percentage Test | 1 | . | Post-Production Testing (On-Site) | On-Site Calibration Test | 2 | . | Real-time Testing (On-Site) | Message Syntax Check | 3 | . | Gross Range Test | 3 | . | Spike Test | 3 | . | Noise Test | 3 | . | Rate of change test | 3 | . | Flat Line Test | 3 | . | Neighbor Sensor Test | 3 | . ### 4.3 Flood Sensors QC Test Descriptions #### 4.3.1 Pre-Production phase testing ##### Test 1 - Calibration Test ##### Test 2 - Accuracy Percentage Check #### 4.3.2 Post-Production testing ##### Message Syntax Check ##### Gross Range Test ##### Noise Test ##### Spike Test ##### Rate of Change Test ##### Flat Line Test ##### Neighbor Sensor Test ### 4.4 Examples of QC Tests Applications ## References 1. U.S. Integrated Ocean Observing System, 2021. Manual for Real-Time Quality Control of Water Level Data Version 2.1: A Guide to Quality Control and Quality Assurance of Water Level Observations. 47 pp. https://doi.org/10.25923/vpsx-dc82 2. ",
    "url": "/quality-management/real-time-flood-data-quality-control/",
    "relUrl": "/quality-management/real-time-flood-data-quality-control/"
  },"10": {
    "doc": "Sensor Hardware Quality Control",
    "title": "Sensor Hardware Quality Control",
    "content": "# Quality Control The documnet set forths the quality control procedures are to verify the quality of the sensor build with consistency. **Table of Contents:** * [General](#general) * [Purpose](#purpose) * [Quality Requirements](#quality-requirements) * [Quality Control](#quality-control) * [Quality Control Records](#quality-control-records) * [References](#references) ## General ### Purpose Provide Quality Control (QC) guidelines for - Sensor Calibration testing - Sensor accuracy testing and validation ## Quality Requirements The following are the quality requirements of the Flood Sensor: | Quality Requirements | Description | :------------------------- | ------------------------------------------------------------ | Sensor Data Validation | | Good Sensor Accuracy | | Desired Sensor operation | 1. The sensor Hardware shall be functional and tested before moving onto the software stage | Weatherproofed Sensor | 1. The sensor and it's housing shall be checked for any defects or potential damage that might cause failure in waterproofing | Good Wireless Connectivity | 1. Sensor tested on the Testing Application on the back-end2. Good RSSI values for LoRa | ## Quality Control | **Quality Control** | **Comply** | **Comment/Action Taken** | ---- | :------------------ | :--------- | :----------------------- | | | | | | | | ## References 1. [The Spruce, Wire connection problems and solutions](https://www.thespruce.com/wire-connection-problems-and-solutions-1152877) 2. [Adafruit's Tutorial on Good Soldering Practices](https://learn.adafruit.com/adafruit-guide-excellent-soldering?view=all) 3. [How to Solder: Through-hole Soldering](https://learn.sparkfun.com/tutorials/how-to-solder-through-hole-soldering/all) ",
    "url": "/quality-management/sensor-hardware-quality-control/",
    "relUrl": "/quality-management/sensor-hardware-quality-control/"
  },"11": {
    "doc": "Sensor Quality Assurance Process",
    "title": "Sensor Quality Assurance Process",
    "content": "# Sensor Quality Assurance Process (QAP) This document details the Quality Assurance Process (QAP) at FloodNet. This document details the responsibilities of the Quality Assurance personnel and chain of command for executing the QAP. **:** * [General](#general) + [Purpose](#purpose) * [Quality Assurance Process](#quality-assurance-process) + [Stage 1 - PCB Assembly](#stage-1---pcb-assembly) + [Stage 2 - MCU Assembly](#stage-2---mcu-assembly) + [Stage 3 - Battery Assembly](#stage-3---battery-assembly) + [Evaluation 1 - Main voltage check](#evaluation-1---main-voltage-check) + [Stage 4 - Housing Preperation](#stage-4---housing-preperation) + [Stage 5 - Ultrasonic Sensor Assembly](#stage-5---ultrasonic-sensor-assembly) + [Stage 6 - PCB Mounting](#stage-6---pcb-mounting) + [Stage 7 - Solar Panel Assembly](#stage-7---solar-panel-assembly) + [Evaluation 2 - Solar Panel Operation](#evaluation-2---solar-panel-operation) + [Stage 8 - Antenna Assembly](#stage-8---antenna-assembly) + [Evaluation 3 - Sensor Operation](#evaluation-3---sensor-operation) + [Final steps](#final-steps) * [References](#references) ## General ### Purpose The main objective of this document is to establish and execute Quality Assurance (QA) measures and procedures to produce high quality sensor standards with consistency. ## Quality Assurance Process The Quality Assurance Process shall be followed staff responsible for performing and verifying work affecting sensor quality. ### Stage 1 - PCB Assembly 1. Gather the PCB and a multimeter to check the PCB for any manufacturing defects. To perform the PCB fault check, place one probe on the beginning of the trace and the other on the ending and check for any short circuits like shown in figure 1. Repeat this process for every trace. 2. While placing the PCB upside down, Solder a 2-pin JST connector into the Battery IN like shown in figure 2. Note: All the holes of the screw terminal shall be facing the print on the PCB like shown in figure 2. 3. Now with PCB in the same position, solder the three legs of the slide switch into the ON OFF pins like shown below in figure 3 (There are a total of 5 legs on this components and the legs on the either ends need not to be soldered, i.e. the middle three are the ones that need soldering). The switch does not have polarity but just on and off depending on where the slider lies. 4. Turn the PCB around and make sure the switch is turned of like shown in figure 4. 5. Now with the PCB placed upside down, solder screw terminals for Ultrasonic Sensor and Solar input like shown in the figure 5. 6. Now Solder battery out screw terminals into BAT OUT like shown in figure 6. 7. Using a multimeter check for shorts and connectivity like shown in figure 7. Further quality of the soldering shall be checked at this step and [identify and resolve any soldering errors](https://learn.adafruit.com/adafruit-guide-excellent-soldering?view=all#common-problems). ### Stage 2 - MCU Assembly 1. Prepare a 2 Pin JST connector by tanning the other ends. Then, insert the JST 2 pin connecter on the back side of MCU like shown below in figure 8. 2. Now cut the MCU male headers to match the number of through holes on the PCB and the female header pins like shown in the below figure 9. 3. Mount the MCU male headers into female headers like shown in the figure 10 below. 4. Solder MCU header pins on the top of the MCU while the MCU is securely held by the female header pins on the bottom like shown in figure 11. 5. With the PCB upside down solder the female header pins into the PCB like shown below in figure 12. 6. Now, connect the 2 ends of the JST connector from the MCU with the BAT OUT into their corresponding terminals VB and G respectively like shown in the figure 13 below. 7. Using a multimeter check for the connectivity between the MCU pins and the screw terminals. ### Stage 3 - Battery Assembly 1. Remove the MCU from the female header pins and insert a ***fully charged*** 400mAh battery into the BAT IN and secure the battery by using a tape like shown in the figure 14 below. 2. Mount the MCU back onto the headers and make sure the battery is not under pressure or being crushed by the MCU. When the battery and MCU are looking like figure 15, there must be enough space between the MCU and battery. ### Evaluation 1 - Main voltage check 1. Turn on the switch and check the voltage at BAT OUT. The multimeter reading should be VBat - the battery's voltage level, across VB and GND when the s/w is on like shown below in figure 15. 2. Turn off the switch before proceeding to next steps - figure 16. ### Stage 4 - Housing Preperation Instruction on using the step drill, jigs, and other tools {Fill-me-in} 1. Secure the lid of the housing and place a marker right on the center using a ultrasonic-jig. Remove the ultrasonic-jig and drill a hole of diameter {fill-me-in} to accommodate the Ultrasonic sensor like shown in figure 17. 2. Secure the housing with the side that does not have mounting supports facing upwards. Place a marker using the antenna-jig. Remove the antenna-jig and drill a hole of diameter {fill-me-in} to accommodate the antenna like shown in figure 18. 3. Similarly, on the opposite side where there is no mounting support, drill a hole of diameter {fill-me-in} using the pg5-cable-jig to accommodate the solar panel cable like shown in figure 19. ### Stage 5 - Ultrasonic Sensor Assembly 1. Tan both ends of 4 different colored wires and solder one end of the wires onto the Ultrasonic sensor's pins - GND, V+, 5 and 4 respectively like shown in figure 20. 2. Now twist the cables like shown below in figure 21. 3. Check for connectivity and any [common soldering errors](https://learn.adafruit.com/adafruit-guide-excellent-soldering?view=all#common-problems). 4. Stack 2 washers that come with the lock nut like shown below in figure 22. 5. Insert US into the housing lid secure it using a lock nut on the inside of the housing lid like shown in figure 23. ### Stage 6 - PCB Mounting 1. Lift the MCU and screw the PCB onto the mounting headers on the base of the housing. The orientation shall match the one shown in the figure 24. 2. Insert the MCU back into the header pins ### Stage 7 - Solar Panel Assembly 1. Use a {fill-me-in} wire and cut it to a length of {fill-me-in} like shown in the figure 25. 2. Prepare the ends by tinning them like shown in the figure 26. 3. Place the nut of the PG-7 cable gland inside the housing and insert this prepared end of the wire into the hosuing through a PG-7 cable gland like shown in the figure 27. 4. Screw in the ends into the Solar screw terminals into the respective pins like shown in figure 28. 5. Stick one side of the gasket onto the 3d mount and run the other end of the solar cable through the 3d mount like shown in figure 29. Leave enough space for soldering the solar panel. 6. Now, prepare the ends by stripping the wires and tinning them and solder the ends onto the Solar board like shown in figure 30. 7. Screw the open ends of the solar cable into the screw terminal SOLAR through the cable gland and check connectivity between the solar panel and screw terminals like shown in figure 31. ### Evaluation 2 - Solar Panel Operation 1. Check for connectivity between both the ends of the solar cable. Also check for shorts between the VS and GND {figure 32} 2. Flash light onto the solar panel and check voltages on the screw terminals using a multimeter like shown below. When a phone falshlight is flashed upon the panel, it should read atleast 3 Volts. {figure 33} 2. Now with the light is being flashed onto the panel, verify the VS is the positive terminal. If not, the solar panel has been soldered in reverse and shall be re-soldered so that a positive voltage is seen on the VS. {figure 34} ### Stage 8 - Antenna Assembly 1. Stack a star washer and lock washer and insert the end of the antenna with threading into the housing from the inside like shown in the figure 35 2. Secure it using a screw from the outside like shown in figure 36 3. Insert the ulf connector of the antenna onto the MCU like shown in figure 37. 4. Screw in the LoRa Antenna from the outside like shown in the figure 38. The antenna should feel tight after screwing onto the threading. If not, try washers of different size. ### Evaluation 3 - Sensor Operation 1. Flash the test firmware and check the battery voltage and ultrasonic measurements on TTN console. The battery voltage shall be between 3.7 Volts and 4.2 Volts. Since we would be using a fully charged battery, it should read voltage greater than 4 Volts. The distance reading on the TTN console shall be greater than or equal to 300 and less than or equal to the maximum range of the sensor model. The 5-meter model range is 300mm to 5000mm and the 10-meter model range is 300mm to 10000mm. {figure 39} ### Final steps 1. Close the lid and make sure the ultrasonic sensor wires goes to the {} to avoid the wires being in the way. {figure 40} 2. Now secure the lid with screws {figure 41} 3. The sensor shall feel robust and when invereted there shall be no moving parts. 4. Inspect the sensor mechanical quality of the following: holes, mounts, securing enclosure, waterproofing. {figure 42} 5. Remove the tape on the gasket and install the solar panel onto the 3D mount {figure 43} ## References 1. [*ER Quality Program Plan*, ES/*ER*/TM-4/R4. (*MMES 1994a*)](https://rais.ornl.gov/documents/tm117.pdf) ",
    "url": "/quality-management/sensor-quality-assurance-process/",
    "relUrl": "/quality-management/sensor-quality-assurance-process/"
  },"12": {
    "doc": "Troubleshooting",
    "title": "Troubleshooting",
    "content": "# Troubleshooting ",
    "url": "/quality-management/troubleshooting/",
    "relUrl": "/quality-management/troubleshooting/"
  }
}
